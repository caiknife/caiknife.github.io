<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hack | 但行好事，莫问前程]]></title>
  <link href="http://caiknife.github.io/blog/categories/hack/atom.xml" rel="self"/>
  <link href="http://caiknife.github.io/"/>
  <updated>2018-11-30T19:59:17+08:00</updated>
  <id>http://caiknife.github.io/</id>
  <author>
    <name><![CDATA[CaiKnife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python读取ini文件]]></title>
    <link href="http://caiknife.github.io/blog/2013/08/21/python-read-ini-files/"/>
    <updated>2013-08-21T14:08:00+08:00</updated>
    <id>http://caiknife.github.io/blog/2013/08/21/python-read-ini-files</id>
    <content type="html"><![CDATA[<p>标准的ini文件中，应该有一个类似[section]的部分作为正文的开头，但是很多情况下，ini文件都是不标准的，比如下面这个格式：</p>

<p>``` ini
master.host                 = stats10.mezimedia.com
master.username             = scltrk
master.password             = Mhok8homL7
master.dbname               = tracking</p>

<p>slave.host                  = stats11.mezimedia.com
slave.port                  = 3308
slave.username              = scltrk
slave.password              = Mhok8homL7
slave.dbname                = tracking</p>

<p>msgsite                     = smarter
offset                      = 20000
```</p>

<p>在PHP中，对ini文件的格式容错率较高，不管是不是以[section]开头，PHP总能以正确的方式解析，不管是用原生的<code>parse_ini_file</code>函数还是<code>Zend_Config_Ini</code>类库，都可以非常方便无错地解析ini。</p>

<!-- more -->


<p>下面是用<code>parse_ini_file</code>解析文件的结果
``` php
require_once &lsquo;Zend/Loader.php&rsquo;;
Zend_Loader::registerAutoload();</p>

<p>$iniFile = &lsquo;./smus.ini&rsquo;;</p>

<p>Zend_Debug::dump(parse_ini_file($iniFile));
/<em>
输出结果
array(12) {
  [&ldquo;master.host&rdquo;] => string(21) &ldquo;stats10.mezimedia.com&rdquo;
  [&ldquo;master.username&rdquo;] => string(6) &ldquo;scltrk&rdquo;
  [&ldquo;master.password&rdquo;] => string(10) &ldquo;Mhok8homL7&rdquo;
  [&ldquo;master.dbname&rdquo;] => string(8) &ldquo;tracking&rdquo;
  [&ldquo;slave.host&rdquo;] => string(21) &ldquo;stats11.mezimedia.com&rdquo;
  [&ldquo;slave.port&rdquo;] => string(4) &ldquo;3308&rdquo;
  [&ldquo;slave.username&rdquo;] => string(6) &ldquo;scltrk&rdquo;
  [&ldquo;slave.password&rdquo;] => string(10) &ldquo;Mhok8homL7&rdquo;
  [&ldquo;slave.dbname&rdquo;] => string(8) &ldquo;tracking&rdquo;
  [&ldquo;msgsite&rdquo;] => string(7) &ldquo;smarter&rdquo;
  [&ldquo;offset&rdquo;] => string(5) &ldquo;20000&rdquo;
}
 </em>/</p>

<p>Zend_Debug::dump(parse_ini_file($iniFile, true));
/<em>
输出结果和上面的语句一样，但是如果ini文件中有[section]的话，输出数组的根key就是[&ldquo;section&rdquo;]
 </em>/
```</p>

<p>而如果用<code>Zend_Config_Ini</code>来解析的话，输出的结构会更清晰：</p>

<p>``` php
$config = new Zend_Config_Ini($iniFile);
Zend_Debug::dump($config->toArray());
/*
输出结果如下。同样如果ini文件中有[section]的话，输出数组的根key就是[&ldquo;section&rdquo;]
array(5) {
  [&ldquo;master&rdquo;] => array(4) {</p>

<pre><code>["host"] =&gt; string(21) "stats10.mezimedia.com"
["username"] =&gt; string(6) "scltrk"
["password"] =&gt; string(10) "Mhok8homL7"
["dbname"] =&gt; string(8) "tracking"
</code></pre>

<p>  }
  [&ldquo;slave&rdquo;] => array(5) {</p>

<pre><code>["host"] =&gt; string(21) "stats11.mezimedia.com"
["port"] =&gt; string(4) "3308"
["username"] =&gt; string(6) "scltrk"
["password"] =&gt; string(10) "Mhok8homL7"
["dbname"] =&gt; string(8) "tracking"
</code></pre>

<p>  }
  [&ldquo;msgsite&rdquo;] => string(7) &ldquo;smarter&rdquo;
  [&ldquo;offset&rdquo;] => string(5) &ldquo;20000&rdquo;
}
 */
```</p>

<p>但是在Python中用来解析ini文件的ConfigParser类，则对ini文件的格式有着非常严格的要求——必须在文件开头含有[section]部分，否则在读取时会抛出<code>ConfigParser.MissingSectionHeaderError</code>。为了能让Python解析ini也可以容错，有必要做一下hack。</p>

<p>{% include_code python-ini/demo.py %}</p>

<p>如此一来就能正常工作了。部分内容参考自StackOverflow——<a href="http://stackoverflow.com/questions/2819696/parsing-properties-file-in-python/2819788#2819788">parsing .properties file in Python</a> 。</p>

<p>Have a nice day！</p>
]]></content>
  </entry>
  
</feed>
