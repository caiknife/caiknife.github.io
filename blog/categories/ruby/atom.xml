<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | 但行好事，莫问前程]]></title>
  <link href="http://caiknife.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://caiknife.github.io/"/>
  <updated>2018-10-16T16:54:02+08:00</updated>
  <id>http://caiknife.github.io/</id>
  <author>
    <name><![CDATA[CaiKnife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RVM使用]]></title>
    <link href="http://caiknife.github.io/blog/2018/10/16/rvmshi-yong/"/>
    <updated>2018-10-16T16:07:18+08:00</updated>
    <id>http://caiknife.github.io/blog/2018/10/16/rvmshi-yong</id>
    <content type="html"><![CDATA[<p>之前因为 Ruby 版本的问题，博客一直用不了。前段时间使用了 RVM 来管理 Ruby 的版本，所以博客又复活了。</p>

<p>所以今天就来总结一下如何用 RVM 来管理不同的 Ruby 版本。</p>

<!-- more -->


<h2>RVM 的安装</h2>

<p>先安装 RVM
``` bash
gpg &mdash;keyserver hkp://keys.gnupg.net &mdash;recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</p>

<p>\curl -sSL <a href="https://get.rvm.io">https://get.rvm.io</a> | bash -s stable
```</p>

<h2>Ruby 的安装和切换</h2>

<p>列出已知的 Ruby 版本
<code>bash
rvm list known
</code></p>

<p>安装一个 Ruby 版本
<code>bash
rvm install 2.2.0
</code></p>

<p>切换 Ruby 版本
<code>bash
rvm use 2.2.0
</code></p>

<p>如果想设置为默认版本，这样一来以后新打开的控制台默认的 Ruby 就是这个版本
<code>bash
rvm use 2.2.0 --default
</code></p>

<p>查询已经安装的ruby
<code>bash
rvm list
</code></p>

<p>卸载一个已安装版本
<code>bash
rvm remove 1.8.7
</code></p>

<h2>gemset 的使用</h2>

<p>RVM 不仅可以提供一个多 Ruby 版本共存的环境，还可以根据项目管理不同的 gemset。gemset 可以理解为是一个独立的虚拟 gem 环境，每一个 gemset 都是相互独立的。</p>

<p>比如你有两个项目，一个是 Rails 2.3 一个是 rails3. gemset 可以帮你便捷的建立两套 gem 开发环境，并且方便的切换。gemset 是附加在 Ruby 语言版本下面的，例如你用了 1.9.2, 建立了一个叫 rails3 的 gemset,当切换到 1.8.7 的时候，rails3 这个 gemset 并不存在。</p>

<p>建立 gemset
<code>bash
rvm use 1.8.7
rvm gemset create rails23
</code></p>

<p>然后可以设定已建立的 gemset 做为当前环境.use 可以用来切换语言或者 gemset，前提是他们已经被安装(或者建立)。并可以在 list 命令中看到。
<code>bash
rvm use 1.8.7
rvm use 1.8.7@rails23
</code>
然后所有安装的 gem 都是安装在这个 gemset 之下。</p>

<p>列出当前 Ruby 的 gemset
<code>bash
rvm gemset list
</code></p>

<p>如果你想清空一个 gemset 的所有 gem， 想重新安装所有 gem，可以这样
<code>bash
rvm gemset empty 1.8.7@rails23
</code></p>

<p>删除一个 gemset
<code>bash
rvm gemset delete rails2-3
</code></p>

<p>RVM 还可以自动加载 gemset。 例如我们有一个 Rails 3.1.3 项目，需要 1.9.3 版本 Ruby，整个流程可以这样。
<code>bash
rvm install 1.9.3
rvm use 1.9.3
rvm gemset create rails313
rvm use 1.9.3@rails313
</code></p>

<p>下面进入到项目目录，建立一个 .rvmrc 文件。在这个文件里可以很简单的加一个命令：
<code>bash
rvm use 1.9.3@rails313
</code>
然后无论你当前 Ruby 设置是什么，cd 到这个项目的时候，RVM 会帮你加载 Ruby 1.9.3 和 rails313 gemset.</p>

<h2>使用 .ruby-gemset 和 .ruby-version</h2>

<p>在项目目录下创建这两个文件 <code>.ruby-gemset</code> 和 <code>.ruby-version</code>，在 <code>.ruby-gemset</code> 中填入 gemset 的名称，在 <code>.ruby-version</code> 填入 Ruby 版本的名称，当 cd 到这个目录的时候，就会自动加载。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给博客写了个 fancybox 的插件]]></title>
    <link href="http://caiknife.github.io/blog/2013/10/02/fancybox-plugin-for-octopress/"/>
    <updated>2013-10-02T17:37:00+08:00</updated>
    <id>http://caiknife.github.io/blog/2013/10/02/fancybox-plugin-for-octopress</id>
    <content type="html"><![CDATA[<p>octopress 默认没有放大图片的效果，今天用 fancybox 做了一个插件扩展。</p>

<p>首先从 <a href="http://fancyapps.com/fancybox/#license">http://fancyapps.com/fancybox/#license</a> 下载最新版的 fancybox ，解压缩后复制 source 目录到 octopress 的 javascripts 目录下。</p>

<p>打开文件 <code>/source/_includes/custom/head.html</code> ，在最后增加一条语句：</p>

<p><code>erb /source/_includes/custom/head.html
{% raw %}{% include fancybox.html %}{% endraw %}
</code></p>

<!-- more -->


<p>然后建立文件 <code>/source/_includes/fancybox.html</code> ，加入以下内容：</p>

<p>``` html /source/_includes/fancybox.html</p>

<script src="http://caiknife.github.io/javascripts/fancybox/jquery.fancybox.pack.js"></script>


<p><link rel="stylesheet" type="text/css" href="http://caiknife.github.io/javascripts/fancybox/jquery.fancybox.css" /></p>

<script type="text/javascript">
(function($){
    $('.fancybox').fancybox();
})(jQuery);
</script>


<p>```</p>

<p>下面的重头戏就是增加一个 <code>fancybox</code> 的标签。创建文件 <code>/plugins/fancybox_tag.rb</code> ，详细代码如下：</p>

<p>``` ruby /plugins/fancybox_tag.rb</p>

<h1>coding: utf-8</h1>

<p>module Jekyll</p>

<p>  # Usage:
  # {% raw %}{% fancybox @filename [thumb:@thumb] [@title] %}{% endraw %}
  # {% raw %}{% fancybox @filename [@title] %}{% endraw %}</p>

<p>  class FancyboxTag &lt; Liquid::Tag</p>

<pre><code>def initialize(tag_name, markup, tokens)
  #  /(?&lt;filename&gt;\S+)(?:\s+(?&lt;thumb&gt;\S+))?(?:\s+(?&lt;title&gt;.+))?/i
  #  /(?&lt;filename&gt;\S+)(?:\s+(?&lt;title&gt;.+))?/i
  if /(?&lt;filename&gt;\S+)(?:\s+thumb:(?&lt;thumb&gt;\S+))?(?:\s+(?&lt;title&gt;.+))?/i =~ markup
    @filename = filename
    @thumb = thumb
    @title = title
  end
end

def render(context)
  if @filename
    "&lt;a href=\"#{@filename}\" title=\"#{@title}\" class=\"fancybox\"&gt;&lt;img src=\"#{thumb_for(@filename, @thumb)}\" alt=\"#{@title}\" /&gt;&lt;/a&gt;"
  else
    "Error. Usage: {% raw %}{% fancybox @filename [thumb:@thumb] [@title] %}{% endraw %}"
  end
end

def thumb_for(filename, thumb)
  if thumb.nil?
    filename
  else
    thumb
  end
end
</code></pre>

<p>  end</p>

<p>end</p>

<p>Liquid::Template.register_tag(&lsquo;fancybox&rsquo;, Jekyll::FancyboxTag)
```</p>

<p>使用方法在注释里有介绍，很简单。</p>

<p>Have a nice day！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[曾经写过的Ruby脚本]]></title>
    <link href="http://caiknife.github.io/blog/2013/08/12/ruby-script-in-history/"/>
    <updated>2013-08-12T23:25:00+08:00</updated>
    <id>http://caiknife.github.io/blog/2013/08/12/ruby-script-in-history</id>
    <content type="html"><![CDATA[<p>以前为了爬豆瓣和人人的美女图片，自己动手用Ruby写过一个爬虫。今天再来看看，几乎都看不懂了，晚上趁着休息时间把以前的代码温习温习，加上了注释，不过这代码已经证实在我的Ubuntu上是跑不动了。唉，开源软件版本更新得太快，以前的老代码放到现在都不能用了，真担心有一天自己也被淘汰，非常害怕啊。</p>

<p>代码很长，偶尔看一下，觉得自己还是能踏踏实实做一个苦逼的码农的，只是有时候人在江湖身不由己，你干的事情不一样是你自己喜欢干的。</p>

<!-- more -->


<p>{% include_code album_download/album_download.rb %}</p>

<p>{% include_code album_download/album.rb %}</p>

<p>{% include_code album_download/douban_album.rb %}</p>

<p>{% include_code album_download/renren_album.rb %}</p>

<p>用起来很简单，直接在命令行下输入：</p>

<p><code>bash
ruby album_download.rb [豆瓣相册链接或人人相册链接]
</code></p>

<p>不过这段代码再也跑不起来了，写这篇博文做个纪念吧。</p>

<p>最后还是想说，我喜欢Python胜过Ruby，不知道自己这辈子还有没有机会当一个Python程序员。</p>

<p>Have a nice day！</p>
]]></content>
  </entry>
  
</feed>
